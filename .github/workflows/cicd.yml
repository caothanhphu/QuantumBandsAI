name: CI/CD Docker Local Deployment

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy-local:
    name: Build and Deploy to Local Docker
    runs-on: [self-hosted, Windows]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify Docker installation
        run: powershell -ExecutionPolicy Bypass -Command "docker --version"
        shell: cmd

      - name: Build Docker image
        run: powershell -ExecutionPolicy Bypass -Command "docker build -t quantumbands-api-image -f Dockerfile ."
        shell: cmd

      - name: Stop and Remove existing container
        run: |
          powershell -ExecutionPolicy Bypass -Command "& {
            $containerName = \"quantumbands-api-container\"
            Write-Host \"Checking for existing container: $containerName\"
            $existingContainer = docker ps -a -q --filter \"name=$containerName\"
            if ($existingContainer) {
              Write-Host \"Stopping and removing existing container: $containerName ($existingContainer)\"
              docker stop $containerName
              docker rm $containerName
            } else {
              Write-Host \"No existing container named $containerName found.\"
            }
          }"
        shell: cmd

      - name: Run new Docker container
        env: # Định nghĩa các biến môi trường sẽ được truyền vào container
          # Lấy giá trị từ GitHub Secrets
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET_KEY }}
        run: |
          docker run -d `
            -p 6020:8080 `
            --name quantumbands-api-container `
            # Truyền biến môi trường vào container
            # Tên biến môi trường trong container phải khớp với quy ước của ASP.NET Core
            -e ConnectionStrings__DefaultConnection="Server=host.docker.internal;Database=FinixAI;User ID=finix;Password=${env:DB_PASSWORD};TrustServerCertificate=True;MultipleActiveResultSets=true" `
            -e JwtSettings__Secret="${env:JWT_SECRET}" `
            # Đảm bảo ASPNETCORE_ENVIRONMENT được đặt đúng nếu không đặt trong Dockerfile
            -e ASPNETCORE_ENVIRONMENT=Docker `
            quantumbands-api-image
          Write-Host "New container 'quantumbands-api-container' started. Access it on host at http://localhost:6020"
        shell: powershell
